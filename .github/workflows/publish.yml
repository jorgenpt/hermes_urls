name: Publish

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build_windows:
    name: Build release (Windows)
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-release_cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-release_cargo-
      - name: Build release
        run: cargo build --release --verbose
      - name: Archive EXE and PDB
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-release
          path: |
            target/release/hermes_urls.exe
            target/release/hermes_urls.pdb

  create_release:
    name: Publish release
    needs: [ build_windows ]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset (Windows EXE)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: dist/Windows-release/hermes_urls.exe
          asset_name: hermes_urls-win64.exe
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows PDB)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: dist/Windows-release/hermes_urls.pdb
          asset_name: hermes_urls-win64.pdb
          asset_content_type: application/octet-stream